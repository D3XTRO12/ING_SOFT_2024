name: Deploy and Run

env:
  REPO_NAME: ${{ github.event.repository.name }}
  AZURE_LOCATION: eastus
  CONTAINER_NAME: flask-estructura
  RESOURCE_GROUP: umGroupResource
  CONTAINER_PORT: 5000
  CONTAINER_CPU: 1
  CONTAINER_MEMORY: 1

on:
  push:
    tags: ['v*.*.*']
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: 'Login via Docker'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'Build and push image to ACR'
        run: |
          docker build . -t ${{ secrets.ACR_NAME }}/${{ env.REPO_NAME }}:${{ github.sha }}
          docker push ${{ secrets.ACR_NAME }}/${{ env.REPO_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Set Azure subscription'
        run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy Container Instance'
        uses: azure/aci-deploy@v1
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          dns-name-label: ${{ env.CONTAINER_NAME }}-${{ github.run_id }}-${{ github.run_attempt }}
          image: ${{ secrets.ACR_NAME }}/${{ env.REPO_NAME }}:${{ github.sha }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: ${{ env.CONTAINER_NAME }}
          location: ${{ env.AZURE_LOCATION }}
          ports: ${{ env.CONTAINER_PORT }}
          cpu: ${{ env.CONTAINER_CPU }}
          memory: ${{ env.CONTAINER_MEMORY }}

      - name: 'Logout from Azure'
        run: az logout
        if: always()